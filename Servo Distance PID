#include <PID_v1.h>
#include "SR04.h"
#include <Servo.h>
Servo myservo;  // create servo object to control a servo
#define BUT1 6
#define BUT2 7
#define TRIG_PIN 4
#define ECHO_PIN 5
SR04 sr04 = SR04(ECHO_PIN, TRIG_PIN);
int Kp, Ki, Kd, pos = 0;
float dist;
double dist2, ang, middle, diff;
PID myPID(&dist2, &ang, &middle, Kp, Ki, Kd, DIRECT);

#define NUMSAMPLES 5
float samples[NUMSAMPLES];


void setup(void) {
  myservo.attach(3);  // attaches the servo on pin 3 to the servo object
  Serial.begin(9600);//Initialization of Serial Port
  myPID.SetMode(AUTOMATIC);
  myPID.SetTunings(10, 60, 1);
  pinMode(BUT1, INPUT_PULLUP);
  pinMode(BUT2, INPUT_PULLUP);
  myservo.write(pos);
  middle = 8;
}

void loop(void) {
  uint8_t i;
  float average;

  for (i = 0; i < NUMSAMPLES; i++) {
    samples[i] = sr04.Distance();
    delay(10);
  }

  average = 0;
  for (i = 0; i < NUMSAMPLES; i++) {
    average += samples[i];
  }
  average /= NUMSAMPLES;

  average=constrain(average,3.0,12.0);
  float read1 = digitalRead(BUT1), read2 = digitalRead(BUT2);

  dist2 = average;
  myPID.Compute();
  pos = map(ang, 255, 0, 0, 90);
  myservo.write(pos);

  if (read1 == LOW) {
    middle += 0.1;
  }
  if (read2 == LOW) {
    middle -= 0.1;
  }
  float difference=average-middle;
  Serial.print(pos);
  Serial.println(average);
//  Serial.print(",");
//  Serial.println(middle);
}
